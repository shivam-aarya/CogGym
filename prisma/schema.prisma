generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      UserRole @default(PARTICIPANT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  responses StudyResponse[]
  sessions  StudySession[]

  @@map("users")
}

model Study {
  id          String      @id @default(cuid())
  title       String
  description String?
  status      StudyStatus @default(DRAFT)

  content     Json
  settings    Json?

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  publishedAt DateTime?

  responses StudyResponse[]
  sessions  StudySession[]

  @@map("studies")
}

model StudyResponse {
  id         String   @id @default(cuid())
  userId     String
  studyId    String
  sessionId  String?

  questionId String
  response   Json
  timestamp  DateTime @default(now())

  user    User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  study   Study         @relation(fields: [studyId], references: [id], onDelete: Cascade)
  session StudySession? @relation(fields: [sessionId], references: [id], onDelete: SetNull)

  @@unique([userId, studyId, questionId])
  @@map("study_responses")
}

model StudySession {
  id          String        @id @default(cuid())
  userId      String
  studyId     String

  status      SessionStatus @default(IN_PROGRESS)
  currentStep Int           @default(0)

  startedAt   DateTime      @default(now())
  completedAt DateTime?
  lastActiveAt DateTime     @default(now())

  metadata    Json?

  user      User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  study     Study           @relation(fields: [studyId], references: [id], onDelete: Cascade)
  responses StudyResponse[]

  @@unique([userId, studyId])
  @@map("study_sessions")
}

enum UserRole {
  PARTICIPANT
  RESEARCHER
  ADMIN
  GUEST
}

enum StudyStatus {
  DRAFT
  ACTIVE
  PAUSED
  COMPLETED
}

enum SessionStatus {
  IN_PROGRESS
  COMPLETED
  ABANDONED
}